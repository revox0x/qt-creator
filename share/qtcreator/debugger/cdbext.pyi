class Type: ...

class Field:
    def name(self) -> str : ...
    def isBaseClass(self) -> bool : ...
    def type(self) -> Type : ...
    def parentType(self) -> Type : ...
    def bitsize(self) -> int : ...
    def bitpos(self) -> int : ...

class Type:
    def name(self) -> str: ...
    def bitsize(self) -> int : ...
    def code(self) -> int : ...
    def unqualified(self) -> bool : ...
    def target(self) -> Type : ...
    def targetName(self) -> str : ...
    def stripTypedef(self) -> Type : ...
    def fields(self) -> Field : ...
    def module(self) -> str : ...
    def moduleId(self) -> int : ...
    def arrayElements(self) -> int : ...
    def templateArguments(self) -> list[int | str] : ...
    def resolved(self) -> bool : ...

class Value: ...
class Value:
    def name(self) -> str : ...
    def type(self) -> Type : ...
    def bitsize(self) -> int : ...
    def asBytes(self) -> bytes : ...
    def address(self) -> int : ...
    def hasChildren(self) -> bool : ...
    def expand(self) -> bool : ...
    def nativeDebuggerValue(self) -> str : ...
    def childFromName(self) -> Value : ...
    def childFromField(self) -> Value : ...
    def childFromIndex(self) -> Value : ...

def parseAndEvaluate() -> Value : ...
def resolveSymbol() -> list[str] : ...
def getNameByAddress() -> str : ...
def getAddressByName() -> int : ...
def lookupType() -> Type | None : ...
def listOfLocals() -> list[Value] : ...
def listOfModules() -> list[str] : ...
def pointerSize() -> int : ...
def readRawMemory() -> bytes : ...
def createValue() -> Value | None : ...
def call() -> Value | None : ...
def reportResult() -> None : ...
