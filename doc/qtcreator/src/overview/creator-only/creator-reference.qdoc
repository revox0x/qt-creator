// Copyright (C) 2023 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page creator-reference.html
    \previouspage creator-how-tos.html
    \nextpage creator-acknowledgements.html

    \title Reference

    The following topics contain reference information about using \QC and the
    integrated tools.

    \annotatedlist creator-reference

    \section1 Analyzers

    Use integrated code analysis tools to improve your C++ or QML code.

    \annotatedlist creator-reference-analyzer

    \section1 Build Systems

    When you create projects, you can choose the build system to use for
    building the project: CMake, qmake, Meson, or Qbs. qmake is installed and
    configured when you install Qt. To use one of the other supported build
    systems, you need to set it up.

    \annotatedlist creator-reference-build-systems

    \section2 Build Configurations

    Build configurations have everything you need to compile the sources into
    binaries. Build configurations use the tools and settings defined in their
    corresponding kit.

    \annotatedlist creator-reference-build-configurations

    \section1 Debuggers

    Set up and use debuggers to debug executable binary files, as well as
    QML, Java, and Python source code.

    \annotatedlist creator-reference-debugger

    \section2 Debugger Views

    Inspect the state of your application while debugging in the
    \uicontrol Debug mode.

    \annotatedlist creator-reference-debugger-views

    \section1 Devices

    Connect devices to the computer to run, debug, and analyze applications
    built for them from \QC. When you install Qt for a target platform, such
    as Android or QNX, the build and run configurations for the development
    targets might be set up automatically in \QC.

    \annotatedlist creator-reference-devices

    \section2 Deploy Configurations

    Deploy configurations handle the packaging of the application as an
    executable and copying it to a location you want to run the executable at.
    The files can be copied to a location in the file system of the computer
    or a device.

    \annotatedlist creator-reference-deploy-configurations

    \section2 Run Configurations

    Run configurations start the application in the location where the
    deploy configuration copied it. By default, when you select
    \uicontrol Run, \QC builds the project, deploys it to the device
    defined in the kit, and runs it there. If you did not make changes
    to the project since you last built and deployed it, \QC simply runs
    it again.

    \annotatedlist creator-reference-run-configurations

    \section1 Editors

    When you open files, \QC chooses a suitable editor according to the file
    type.

    \annotatedlist creator-reference-editors

    \section1 Platforms

    You can install and run \QC on several operating systems to create
    applications for multiple desktop, embedded, and mobile device platforms.

    \annotatedlist creator-reference-platforms

    \section1 Preferences

    You can set preferences that apply globally to all projects and override
    them for particular projects.

    \annotatedlist creator-reference-preferences

    \section2 Analyzer

    Preferences for code analysis tools.

    \annotatedlist creator-reference-preferences-analyzer

    \section2 C++

    Preferences for editing C++ code.

    \annotatedlist creator-reference-preferences-cpp

    \section2 Debugger

    Preferences for debugging.

    \annotatedlist creator-reference-preferences-debugger

    \section2 Kits

    Preferences for build and run kits.

    \annotatedlist creator-reference-preferences-kits

    \section2 Text Editor

    Preferences for the behavior and appearance of text and code editors.

    \annotatedlist creator-reference-preferences-text-editor

    \section1 UI Design

    You can use a visual editor, \QD, for designing widget-based UIs
    in the \uicontrol Design mode. For Qt Quick UIs, use a separate visual
    editor, \l{\QDS Manual}{\QDS}, or the \uicontrol Edit mode.

    \annotatedlist creator-reference-ui-design

    \section1 Views

    When you switch modes or trigger actions, \QC opens views for viewing
    output and organizing project contents.

    \section2 Output Views

    You can view output from several sources, such as a list of errors and
    warnings encountered during a build, detailed output from the compiler,
    status of a program when it is executed, debug output, or search results.

    \annotatedlist creator-reference-output-views

    \section2 Sidebar Views

    In some modes, you can use a left and right sidebar to organize different
    views into project contents. Only views that are relevant to the mode you
    are working in are available in it.

    \annotatedlist creator-reference-sidebar-views
*/
