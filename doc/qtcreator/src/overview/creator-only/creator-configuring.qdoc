// Copyright (C) 2023 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \previouspage creator-quick-tour.html
    \page creator-configuring.html
    \nextpage creator-build-example-application.html

    \title Configuring Qt Creator

    If you install \QC as part of a Qt installation, you should be able to use
    it out-of-the-box, with the default settings and configuration options.

    However, if you install the stand-alone \QC package, build \QC from sources,
    or install several Qt versions, you may need to tell \QC where to find the
    Qt versions and compilers by adding the paths to them and by creating
    \l{Kits}{kits} that use them.

    To make \QC behave more like your favorite code editor or IDE,
    change the preferences for keyboard shortcuts, color schemes, generic
    highlighting, code snippets, and version control systems. Manage plugins
    to turn on and off \QC features.

    The following sections summarize the options that you have and point you to
    detailed information to help you specify any required settings and to make
    using \QC a better experience for you.

    \section1 Checking Build and Run Settings

    \QC is an integrated development environment (IDE) for creating
    applications. While you can use \QOI to install \QC,
    the stand-alone \QC installer never installs Qt or any Qt tools, such as
    qmake. To use \QC for Qt development, you also need to install a Qt version
    and a compiler. If you update the compiler version later, you
    can register it into \QC.

    \QOI attempts to auto-detect compilers and Qt versions. If it
    succeeds, the relevant kits will automatically become
    available in \QC. If it does not, you must add the kits yourself to tell
    \QC where everything is.

    To add kits, go to \preferences > \uicontrol Kits and select \uicontrol Add.

    Each kit consists of a set of values that define one environment, such as a
    \l{glossary-device}{device}, compiler, and Qt version. If \preferences >
    \uicontrol Kits > \uicontrol {Qt Versions} does not show all the installed
    Qt versions, select \uicontrol {Link with Qt}.

    If \uicontrol Auto-detected still does not show the Qt version, select
    \uicontrol {Add} to add it manually.

    Also check that \preferences > \uicontrol Kits >
    \uicontrol {Compilers} shows your compiler.

    Connect devices to the computer via USB to run, debug, and analyze
    applications on them. You can connect Linux-based devices also
    over a WLAN. Configure a connection between \QC and the computer, and
    select the device in a kit.

    To add devices, go to \preferences > \uicontrol Devices >
    \uicontrol Devices and select \uicontrol Add.

    For more information, see \l{Manage Kits}{How To: Manage Kits} and
    \l{Develop for Devices}{How To: Develop for Devices}.

    \section1 Changing Keyboard Shortcuts

    You can use \QC with your favorite keyboard shortcuts.

    To view and edit all keyboard shortcuts defined in \QC, go to \preferences >
    \uicontrol Environment > \uicontrol Keyboard. For more information, see
    \l{Keyboard Shortcuts}.

    \section1 Changing Color Schemes

    Themes set the appearance of the \QC UI: widgets, colors, and icons.

    To switch themes, go to \preferences > \uicontrol Environment >
    \uicontrol Interface and select a theme in \uicontrol Theme.

    Use the \QC text and code editors with your favorite color scheme that sets
    highlighting of code elements and the background color. Select one of the
    predefined color schemes or create custom ones. The color schemes apply to
    highlighting C++ files, QML files, and generic files.

    To change the color scheme, go to \preferences >
    \uicontrol {Text Editor} > \uicontrol {Font & Colors}.

    For more information, see \l{Change editor colors}.

    \l{https://api.kde.org/frameworks/syntax-highlighting/html/index.html}
    {KSyntaxHighlighting} offers generic highlighting. It is the syntax
    highlighting engine for Kate syntax definitions. \QC comes with most of
    the commonly used syntax files, and you can download additional files.

    To download and use highlight definition files, go to \preferences >
    \uicontrol {Text Editor} > \uicontrol {Generic Highlighter}.

    For more information, see \l{Download highlight definitions}.

    \section1 Adding Your Own Code Snippets

    As you write code, \QC suggests properties, IDs, and code snippets to
    complete the code. It lists context-sensitive suggestions for
    the statement currently under your cursor. Add, modify, and remove
    snippets in the snippet editor.

    To open the snippet editor, go to \preferences >
    \uicontrol {Text Editor} > \uicontrol Snippets.

    For more information, see \l{Snippets}.

    \section1 Configuring Version Control Systems

    \QC supports several version control systems. In most cases, you do not need
    to configure the version control in any special way to make it work with
    \QC.

    However, you can set some configuration options in \preferences >
    \uicontrol {Version Control} > \uicontrol General.

    For more information about the supported functions, see
    \l{Version Control Systems}.

    \section1 Managing Plugins

    \QC comes with a set of plugins, some of which are disabled by default.
    You can \l{Enable and disable plugins}{enable} disabled plugins if you
    need them and disable plugins you don't need.

    \l{Install plugins}{Download and install} more plugins from
    \l{https://marketplace.qt.io/}{Qt Marketplace} or some
    other source, such as \l{https://github.com/}{GitHub}.

    To enable and disable plugins, go to \uicontrol Help >
    \uicontrol {About Plugins}.

    To install plugins, go to \uicontrol Help > \uicontrol {About Plugins} and
    select \uicontrol {Install Plugins}.

    \sa {Installation}, {Reset \QC settings}, {Preferences}
*/
